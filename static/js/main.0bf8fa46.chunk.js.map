{"version":3,"sources":["assets/EnKeep_Icon_Text.png","assets/EnAPI_Icon_Text.png","assets/EnUI_Icon_Text.png","assets/EnOS_Icon.png","assets/lowski.png","assets/slide.jpeg","assets/sfdevpic.jpeg","assets/sign.jpeg","assets/stuff.jpeg","assets/rocksbc.png","assets/EtherNode_4.png","theme/theme.ts","components/footerComp.tsx","components/navComp.tsx","containers/HomePage/HomePage.tsx","containers/SoftwarePage/SoftwarePage.tsx","containers/AboutUsPage/AboutUsPage.tsx","containers/HardwarePage/HardwarePage.tsx","containers/StorePage/StorePage.tsx","containers/HardwarePage/EnkeepPage.tsx","containers/SoftwarePage/EnuiPage.tsx","containers/SoftwarePage/EnapiPage.tsx","containers/SoftwarePage/EnosPage.tsx","containers/StakePage/StakePage.tsx","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","ul","margin","padding","li","listStyle","flexGrow","width","background","paper","borderBottom","divider","flexWrap","spacing","textDecoration","grey","display","justifyContent","alignItems","marginBottom","borderTop","marginTop","paddingTop","paddingBottom","breakpoints","up","footers","title","description","href","target","Copyright","Typography","variant","color","align","to","Date","getFullYear","Footer","classes","Container","maxWidth","component","className","footer","Grid","container","justify","map","item","xs","sm","key","gutterBottom","Box","mt","Navigation","AppBar","position","elevation","appBar","Toolbar","toolbar","noWrap","toolbarTitle","src","logo","alt","height","navlink","Button","tiers","enKeepIcon","subheader","buttonText","buttonVariant","link","enApiIcon","enUIIcon","HomePage","Fragment","CssBaseline","heroContent","style","textAlign","lowskislide","sfdevpic","notice","freestuff","rock64pro","tier","md","Card","CardHeader","titleTypographyProps","subheaderTypographyProps","cardHeader","CardContent","line","CardActions","buttonlink","fullWidth","softwares","enosIcon","SoftwarePage","software","AboutUsPage","action","HardwarePage","items","StorePage","TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","p","a11yProps","EnkeepPage","React","useState","setValue","Tabs","onChange","event","newValue","indicatorColor","textColor","scrollButtons","aria-label","Tab","label","EtherNodeIMG","EnuiPage","EnapiPage","EnosPage","StakePage","routing","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0bf8fa46.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/EnKeep_Icon_Text.7871e2be.png\";","module.exports = __webpack_public_path__ + \"static/media/EnAPI_Icon_Text.851cb2d4.png\";","module.exports = __webpack_public_path__ + \"static/media/EnUI_Icon_Text.c6b62081.png\";","module.exports = __webpack_public_path__ + \"static/media/EnOS_Icon.13304f47.png\";","module.exports = __webpack_public_path__ + \"static/media/lowski.305f030d.png\";","module.exports = __webpack_public_path__ + \"static/media/slide.9b60e381.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/sfdevpic.355a84c9.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/sign.66acd169.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/stuff.58ba55c0.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/rocksbc.457df65b.png\";","module.exports = __webpack_public_path__ + \"static/media/EtherNode_4.97157d8d.png\";","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme: any) => ({\n  \"@global\": {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n    ul: {\n      margin: 0,\n      padding: 0,\n    },\n    li: {\n      listStyle: \"none\",\n    },\n  },\n  \"root\": {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  \"appBar\": {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  \"toolbar\": {\n    flexWrap: \"wrap\",\n  },\n  \"toolbarTitle\": {\n    flexGrow: 1,\n  },\n  \"navlink\": {\n    \"margin\": theme.spacing(1, 1.5),\n    \"textDecoration\": \"none\",\n    \"textTransform\": \"uppercase\",\n    \"color\": \"black\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n  \"buttonlink\": {\n    \"margin\": theme.spacing(1, 1.5),\n    \"textDecoration\": \"none\",\n    \"textTransform\": \"uppercase\",\n    \"color\": \"black\",\n    \"&:hover\": {\n      textDecoration: \"none\",\n    },\n  },\n  \"heroContent\": {\n    padding: theme.spacing(8, 0, 6),\n  },\n  \"cardHeader\": {\n    backgroundColor: theme.palette.grey[200],\n  },\n  \"cardPricing\": {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  \"footer\": {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport { useStyles } from \"../theme/theme\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst footers = [\n  {\n    title: \"Company\",\n    description: [\"Team\", \"History\", \"Contact us\"],\n  },\n  {\n    title: \"Features\",\n    description: [\"Decentralized\", \"Open Source\", \"JSON-RPC API\", \"EVM Blockchains\", \"Multi Client Support\"],\n  },\n  {\n    title: \"Resources\",\n    description: [\n      <a href=\"https://www.github.com/ethernodeio/\" target=\"_blank\" >GitHub</a> as any,\n      <a href=\"https://twitter.com/Ethernode_io\" target=\"_blank\">Twitter</a>,\n      <a href=\"https://ethernode.io\" >Home</a>,\n    ],\n  },\n  {\n    title: \"Legal\",\n    description: [\"Privacy policy\", \"Terms of use\"],\n  },\n];\n\nexport function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link to=\"home\">\n        EtherNode.io\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nexport function Footer() {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\n      <Grid container spacing={4} justify=\"space-evenly\">\n        {footers.map((footer) => (\n          <Grid item xs={6} sm={3} key={footer.title}>\n            <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n              {footer.title}\n            </Typography>\n            <ul>\n              {footer.description.map((item) => (\n                <li key={item}>\n                  {item}\n                </li>\n              ))}\n            </ul>\n          </Grid>\n        ))}\n      </Grid>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useStyles } from \"../theme/theme\";\nimport logo from \"../assets/lowski.png\";\n\nexport const Navigation = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n          <img src={logo} alt=\"logo\" height=\"50\" />\n        </Typography>\n        <nav>\n          <Link to=\"/home\" className={classes.navlink}>\n            <Button>Home</Button>\n          </Link>\n          <Link to=\"/stakepage\" className={classes.navlink}>\n            <Button>Cardano Stake Pool</Button>\n          </Link>\n          <Link to=\"/aboutus\" className={classes.navlink}>\n            <Button>About</Button>\n          </Link>\n          <Link to=\"/software\" className={classes.navlink}>\n            <Button>Software</Button>\n          </Link>\n          <Link to=\"/hardware\" className={classes.navlink}>\n            <Button>Hardware</Button>\n          </Link>\n          <Link to=\"/store\" className={classes.navlink}>\n            <Button>Store</Button>\n          </Link>\n        </nav>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\n/*\n<Button href=\"#\" color=\"primary\" variant=\"outlined\" className={classes.link}>\n  Login - NA\n</Button>\n*/\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { useStyles } from \"../../theme/theme\";\nimport { Footer } from \"../../components/footerComp\";\nimport { Navigation } from \"../../components/navComp\";\nimport enKeepIcon from \"../../assets/EnKeep_Icon_Text.png\";\nimport enApiIcon from \"../../assets/EnAPI_Icon_Text.png\";\nimport enUIIcon from \"../../assets/EnUI_Icon_Text.png\";\nimport lowskislide from \"../../assets/slide.jpeg\";\nimport sfdevpic from \"../../assets/sfdevpic.jpeg\";\nimport notice from \"../../assets/sign.jpeg\";\nimport freestuff from \"../../assets/stuff.jpeg\";\nimport rock64pro from \"../../assets/rocksbc.png\";\n\nconst tiers = [\n  {\n    title: <img src={enKeepIcon} alt=\"enkeep icon\" height=\"100\" /> as any,\n    subheader: \"Hardware\",\n    description: [\"Rockchip RK3399 SOC\", \"4GB LPDDR4 RAM\", \"802.11 AC + BT 4.0/5.0\", \"NVMe SSD\"],\n    buttonText: \"More Info\",\n    buttonVariant: \"outlined\",\n    link: \"enkeep\",\n  },\n  {\n    title: <img src={enApiIcon} alt=\"enkeep icon\" height=\"100\" /> as any,\n    subheader: \"Software\",\n    description: [\n      \"Open Source\",\n      \"Apache2\",\n      \"JSON-RPC\",\n      \"OpenRPC Spec\",\n    ],\n    buttonText: \"More Info\",\n    buttonVariant: \"contained\",\n    link: \"enapi\",\n  },\n  {\n    title: <img src={enUIIcon} alt=\"enkeep icon\" height=\"100\" /> as any,\n    subheader: \"Software\",\n    description: [\n      \"Open Source\",\n      \"Apache2\",\n      \"Multi OS Support\",\n      \"Desktop App\",\n    ],\n    buttonText: \"More Info\",\n    buttonVariant: \"outlined\",\n    link: \"enui\",\n  },\n];\n\nconst HomePage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Navigation />\n      <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          *What happened to Ethernode?*\n      </Typography>\n        <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n          Maciej and I started Ethernode in 2018 to develop tools that simplify running nodes for evm blockchain networks.\n          We hold that the chief value proposition of public “decentralized” is minimizing dependencies on trusted 3rd parties.\n          <br />\n          <div style={{textAlign:\"center\"}} >\n            <img src={lowskislide} width=\"600\" />\n          </div>\n          <br /><br />\n          The decentralized nature of these networks and the ability to leverage that value proposition depend on direct user \n          participation in the network by running nodes and developers building dApps that run entirely client-side and interact \n          with the blockchain through the user’s node.\n          <br />\n          <div style={{textAlign:\"center\"}} >\n            <img src={sfdevpic} height=\"600\" />\n          </div>\n          <br /><br />\n          We made the decision to shutter Ethernode at the end of 2019 after clear evidence that there are not enough people serious \n          about participating in decentralized, secure, p2p blockchain networks to justify pursuing the effort as a business.\n          <br />\n          <div style={{textAlign:\"center\"}} >\n          <img src={notice} />\n          </div>\n          <br /><br />\n          The resources we developed as Ethernode have always been open source and entirely free and will continue to be maintained, \n          expanded, and available from our new github page at https://github.com/lowskidev\n          <br />\n          <div style={{textAlign:\"center\"}} >\n          <img src={freestuff} />\n          </div>\n          <br /><br />\n          We will be releasing OS images for the RockPro64 and pi4 soon so users can source the hardware of their choice and start running nodes and using the API and other utilities quickly and easily.\n          <br />\n          <div style={{textAlign:\"center\"}} >\n          <img src={rock64pro} />\n          </div>\n          <br /><br />\n          The principles that drove us to undertake this endeavor haven’t changed and we won’t stop building. We’ll now being sharing our efforts as LowSki, just a couple of guys trying to contribute some value.\n      </Typography>\n      </Container>\n      {/* Hero unit */}\n      {/*\n      <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          Mission\n        </Typography>\n        <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n          Blockchain networks have the potential to make meaningful and lasting positive changes, allowing people around the\n          world to communicate, transact, and transfer information privately and securely. At the core of this technology is a\n          powerful principle - trust minimization, reducing or eliminating reliance on 3rd parties for formal verification.\n          <br /><br />\n          While most of the attention around blockchain networks has been focused on the blockchain part, at Ethernode we’re all\n          about the networks. Public encrypted networks like Ethereum Classic Or Cardano are permission-less to join. If you have an\n          internet connection and modest hardware you simply host a node and become a peer in a secure distributed public network!\n          <br /><br />\n          This stores a synced copy of the blockchain ledger on your local hardware and you get a network address which allows you to\n          send and receive data securely and privately from other peers in the network. Unfortunately, nodes haven’t been that simple to\n          host and even as user awareness and adoption have grown the number of nodes has decreased, requiring users to\n          rely on a remote connection to a 3rd party node host for their blockchain interactions. Not very trust minimized.\n          <br /><br />\n          We’re solving this problem by running your own nodes simple, convenient, and practical.\n          <br /><br />\n          EnOS is an opensource Linux operating system built for blockchain, a platform where DApps run on the user’s device and all\n          user data and blockchain interactions happen locally and securely. With EnKeep you not only get plug and play convenience but\n          also the fortress at the center of your own private and secure home mesh network. This creats an environment where your\n          increasingly connected smart home can communicate securely and you own the data you produce.\n          <br /><br />\n          To a future of effectively implemented trust minimization maximalism!\n          <br /><br />\n          -Team Ethernode\n        </Typography>\n      </Container>\n      */}\n      {/* End hero unit */}\n      <Container maxWidth=\"md\" component=\"main\">\n        <Grid container spacing={5} alignItems=\"flex-end\">\n          {tiers.map((tier) => (\n            // Enterprise card is full width at sm breakpoint\n            <Grid item key={tier.title} xs={10} sm={8} md={4}>\n              <Card>\n                <CardHeader\n                  title={tier.title}\n                  subheader={tier.subheader}\n                  titleTypographyProps={{ align: \"center\" }}\n                  subheaderTypographyProps={{ align: \"center\" }}\n                  className={classes.cardHeader}\n                />\n                <CardContent>\n                  <ul>\n                    {tier.description.map((line) => (\n                      <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\n                        {line}\n                      </Typography>\n                    ))}\n                  </ul>\n                </CardContent>\n                <CardActions>\n                  <Link to={tier.link} className={classes.buttonlink}><Button fullWidth variant=\"outlined\" color=\"primary\">{tier.buttonText}</Button></Link>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n      {/* Footer */}\n      <Footer /> >\n    {/* End footer */}\n    </React.Fragment >\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport { useStyles } from \"../../theme/theme\";\nimport { Footer } from \"../../components/footerComp\";\nimport { Navigation } from \"../../components/navComp\";\nimport enApiIcon from \"../../assets/EnAPI_Icon_Text.png\";\nimport enUIIcon from \"../../assets/EnUI_Icon_Text.png\";\nimport enosIcon from \"../../assets/EnOS_Icon.png\";\n\nconst softwares = [\n  {\n    title: <img src={enApiIcon} alt=\"en api icon\" height=\"100\" /> as any,\n    subheader: \"Software\",\n    description: [\n      \"Open Source\",\n      \"Apache2\",\n      \"JSON-RPC\",\n      \"OpenRPC Spec\",\n    ],\n    buttonText: \"More Info\",\n    link: \"enapi\",\n  },\n  {\n    title: <img src={enUIIcon} alt=\"en ui icon\" height=\"100\" /> as any,\n    subheader: \"Software\",\n    description: [\n      \"Open Source\",\n      \"Apache2\",\n      \"Multi OS Support\",\n      \"Desktop App\",\n    ],\n    buttonText: \"More Info\",\n    link: \"enui\",\n  },\n  {\n    title: <img src={enosIcon} alt=\"en os icon\" height=\"100\" /> as any,\n    subheader: \"Software\",\n    description: [\n      \"Open Source\",\n      \"SBC/VM/Barebones support\",\n      \"ARM64 Support\",\n      \"Ubuntu Based\",\n    ],\n    buttonText: \"More Info\",\n    link: \"enos\",\n  },\n];\n\nconst SoftwarePage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Navigation />\n      {/* Hero unit */}\n      <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          Software\n        </Typography>\n        <Typography align=\"center\" color=\"textSecondary\" component=\"p\">\n          Blockchain software for next generation of Web3 development.\n          <br />\n          -Team Ethernode\n        </Typography>\n      </Container>\n      {/* End hero unit */}\n      <Container maxWidth=\"md\" component=\"main\">\n        <Grid container spacing={5} alignItems=\"flex-end\">\n          {softwares.map((software) => (\n            // Enterprise card is full width at sm breakpoint\n            <Grid item key={software.title} xs={12} sm={software.title === \"Enterprise\" ? 12 : 6} md={4}>\n              <Card>\n                <CardHeader\n                  title={software.title}\n                  subheader={software.subheader}\n                  titleTypographyProps={{ align: \"center\" }}\n                  subheaderTypographyProps={{ align: \"center\" }}\n                  className={classes.cardHeader}\n                />\n                <CardContent>\n                  <ul>\n                    {software.description.map((line) => (\n                      <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\n                        {line}\n                      </Typography>\n                    ))}\n                  </ul>\n                </CardContent>\n                <CardActions>\n                  <Link to={software.link} className={classes.buttonlink}><Button fullWidth variant=\"outlined\" color=\"primary\">{software.buttonText}</Button></Link>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n      {/* Footer */}\n      <Footer />\n      {/* End footer */}\n    </React.Fragment>\n  );\n};\n\nexport default SoftwarePage;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport StarIcon from \"@material-ui/icons/StarBorder\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport { useStyles } from \"../../theme/theme\";\nimport { Footer } from \"../../components/footerComp\";\nimport { Navigation } from \"../../components/navComp\";\n\nconst tiers = [\n  {\n    title: \"The Team\",\n    subheader: \"Peoples\",\n    description: [\n      \"Decentrilized\",\n      \"Pretty Awesome\",\n      \"Dedicated\",\n      \"Blockchain Enthuziasts\",\n    ],\n    buttonText: \"More Info\",\n    buttonVariant: \"outlined\",\n  },\n  {\n    title: \"Ethernode llc\",\n    subheader: \"Company\",\n    description: [\n      \"Boundless\",\n      \"Hardware\",\n      \"Development\",\n      \"Blockchain\",\n    ],\n    buttonText: \"More Info\",\n    buttonVariant: \"contained\",\n  },\n];\n\nconst AboutUsPage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Navigation />\n      {/* Hero unit */}\n      <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          About Us\n        </Typography>\n        <Typography align=\"center\" color=\"textSecondary\" component=\"p\">\n          Step into our REALM\n          <br />\n          -Team Ethernode\n        </Typography>\n      </Container>\n      {/* End hero unit */}\n      <Container maxWidth=\"md\" component=\"main\">\n        <Grid container spacing={5} alignItems=\"flex-end\">\n          {tiers.map((tier) => (\n            // Enterprise card is full width at sm breakpoint\n            <Grid item key={tier.title} xs={12} sm={tier.title === \"Enterprise\" ? 12 : 6} md={4}>\n              <Card>\n                <CardHeader\n                  title={tier.title}\n                  subheader={tier.subheader}\n                  titleTypographyProps={{ align: \"center\" }}\n                  subheaderTypographyProps={{ align: \"center\" }}\n                  action={tier.title === \"EnKeep\" ? <StarIcon /> : null}\n                  className={classes.cardHeader}\n                />\n                <CardContent>\n                  <ul>\n                    {tier.description.map((line) => (\n                      <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\n                        {line}\n                      </Typography>\n                    ))}\n                  </ul>\n                </CardContent>\n                <CardActions>\n                  <Link to=\"\" className={classes.buttonlink} > <Button fullWidth variant=\"outlined\" color=\"primary\">{tier.buttonText}</Button></Link>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n      {/* Footer */}\n      <Footer />\n      {/* End footer */}\n    </React.Fragment>\n  );\n};\n\nexport default AboutUsPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport { useStyles } from \"../../theme/theme\";\nimport { Footer } from \"../../components/footerComp\";\nimport { Navigation } from \"../../components/navComp\";\nimport enKeepIcon from \"../../assets/EnKeep_Icon_Text.png\";\n\nconst tiers = [\n  {\n    title: <img src={enKeepIcon} alt=\"enkeep icon\" height=\"100\" /> as any,\n    subheader: \"Hardware\",\n    description: [\"Rockchip RK3399 SOC\", \"4GB LPDDR4 RAM\", \"802.11 AC + BT 4.0/5.0\", \"NVMe SSD\"],\n    buttonText: \"More Info\",\n    link: \"enkeep\",\n  },\n];\n\nconst HardwarePage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Navigation />\n      {/* Hero unit */}\n      <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          Hardware\n        </Typography>\n        <Typography align=\"center\" color=\"textSecondary\" component=\"p\">\n          Hardware for next generation web3 technologies\n        </Typography>\n      </Container>\n      {/* End hero unit */}\n      <Container maxWidth=\"md\" component=\"main\">\n        <Grid container spacing={3} alignItems=\"center\">\n          {tiers.map((tier) => (\n            // Enterprise card is full width at sm breakpoint\n            <Grid item key={tier.title} xs={12} sm={6} md={4}>\n              <Card>\n                <CardHeader\n                  title={tier.title}\n                  subheader={tier.subheader}\n                  titleTypographyProps={{ align: \"center\" }}\n                  subheaderTypographyProps={{ align: \"center\" }}\n                  className={classes.cardHeader}\n                />\n                <CardContent>\n                  <ul>\n                    {tier.description.map((line) => (\n                      <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\n                        {line}\n                      </Typography>\n                    ))}\n                  </ul>\n                </CardContent>\n                <CardActions>\n                  <Button fullWidth variant=\"outlined\" color=\"primary\">\n                    <Link to={tier.link} className={classes.buttonlink}>{tier.buttonText}</Link>\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n      {/* Footer */}\n      <Footer />>\n      {/* End footer */}\n    </React.Fragment>\n  );\n};\n\nexport default HardwarePage;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport StarIcon from \"@material-ui/icons/StarBorder\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport { useStyles } from \"../../theme/theme\";\nimport { Footer } from \"../../components/footerComp\";\nimport { Navigation } from \"../../components/navComp\";\nimport enKeepIcon from \"../../assets/EnKeep_Icon_Text.png\";\n\nconst items = [\n  {\n    title: <img src={enKeepIcon} alt=\"enkeep icon\" height=\"100\" /> as any,\n    subheader: \"Hardware\",\n    description: [\"Rockchip RK3399 SOC\", \"4GB LPDDR4 RAM\", \"802.11 AC + BT 4.0/5.0\", \"NVMe SSD\"],\n    buttonText: \"Pre Sale(Stay Tuned).\",\n    buttonVariant: \"outlined\",\n    link: \"#\",\n  },\n];\n\nconst StorePage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Navigation />\n      {/* Hero unit */}\n      <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          Store\n        </Typography>\n        <Typography align=\"center\" color=\"textSecondary\" component=\"p\">\n          Please stay tuned for further Instructions\n        </Typography>\n      </Container>\n      {/* End hero unit */}\n      <Container maxWidth=\"md\" component=\"main\">\n        <Grid container spacing={5} alignItems=\"flex-end\">\n          {items.map((item) => (\n            // Enterprise card is full width at sm breakpoint\n            <Grid item key={item.title} xs={12} sm={6} md={4}>\n              <Card>\n                <CardHeader\n                  title={item.title}\n                  subheader={item.subheader}\n                  titleTypographyProps={{ align: \"center\" }}\n                  subheaderTypographyProps={{ align: \"center\" }}\n                  action={item.title === \"EnKeep\" ? <StarIcon /> : null}\n                  className={classes.cardHeader}\n                />\n                <CardContent>\n                  <ul>\n                    {item.description.map((line) => (\n                      <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\n                        {line}\n                      </Typography>\n                    ))}\n                  </ul>\n                </CardContent>\n                <CardActions>\n                  <Button fullWidth variant=\"outlined\" color=\"primary\">\n                    <Link to={item.link} className={classes.buttonlink}>{item.buttonText}</Link>\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n      {/* Footer */}\n      <Footer />\n      {/* End footer */}\n    </React.Fragment>\n  );\n};\n\nexport default StorePage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { useStyles } from \"../../theme/theme\";\nimport { Footer } from \"../../components/footerComp\";\nimport { Navigation } from \"../../components/navComp\";\nimport EtherNodeIMG from \"../../assets/EtherNode_4.png\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\n\ninterface ITabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: ITabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    \"id\": `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst EnkeepPage: React.FC = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Navigation />\n      {/* Hero unit */}\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"EnKeep\" {...a11yProps(0)} />\n          <Tab label=\"The Future\" {...a11yProps(1)} />\n          <Tab label=\"Supported Blockchains\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n        <Typography align=\"center\">\n          <img src={EtherNodeIMG} alt=\"ethernode\" height=\"250\" />\n        </Typography>\n        <TabPanel value={value} index={0}>\n          <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\">\n            EnKeep\n          </Typography>\n          <br />\n          <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n            The EnKeep is a Single Board computer based on the ROCKPro64 made by pine64.org\n            It comes with 4GB of LDDR4 Ram and ARM64 Hexa-Core CPU.\n          </Typography>\n          <br />\n\n          <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n            The EnKeep comes preloaded with EnOS, a Ubuntu based linux distro preloaded with\n            everything you need to run blockchain nodes.\n          </Typography>\n          <br />\n\n          <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n            We have also developed a JSON-RPC2.0 API we call enAPI, which is written in nodeJS\n            and uses docker preloaded in EnOS to run blockchain nodes in.\n          </Typography>\n          <br />\n\n          <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n            To controll all of this we have developed a UI called EnUI which connects to your EnKeep\n            and allows you to easily and run Ethereum based nodes for which we're currently utilizing Multi-Geth\n          </Typography>\n          <br />\n        </TabPanel>\n\n        <TabPanel value={value} index={1}>\n          <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\">\n            The Future\n          </Typography>\n          <br />\n\n          <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n            In todays world where Blockchain technologies promise to bring upon us the ERA of Web3\n            The Decentrilized internet. At Ethernode we've noticed that there is one major component\n            missing in this idea of decentrilized web of the future.\n          </Typography>\n          <br />\n\n          <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n            And that's that most users that we expect to adopt these new web3 blockchain technologies that are build to be used in a\n            decentrilized manner are in fact used in a very centrilized way. The idea of blockchain is that every one who wants to\n            participate in a blockchain network by either utilizing a dapp like a wallet to manage their funds or public/private key pairs\n            needs a blockchain node with it's ledger synced and syncing at all times.\n         </Typography>\n          <br />\n\n          <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n            As a result projects like Infura have been born, where something like 60%+ of all ETH blockchain nodes/infrastructure\n            is operated on AWS, not very decentrilized really but it does get a job done. And many other great tools and\n            ideas coming out to help developers jump into dapp development with minial learning curve on how the blockchain\n            technology works, or operating expensive servers to run and sync ther blockchain nodes, which at times can take hours\n            and even days to sync up. For clarification, the EnKeep does not solve the sync waiting times, but it does provide you\n            with the freedom of just setup your blockchain node and let it run on it's own dedicated hardware always on always syncing.\n          </Typography>\n          <br />\n\n          <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n            Developers of different wallet applications and dapps have even went to extens of allowing users to run\n            the node sfotware on their local computers, in light modes and fast sync modes. But lets be honest here.\n            Syncing a blockchain node takes a toll on your system even if you're running 16Gb of DDR Ram and a\n            beastul I7/I9 intel CPU. But like mentioned above, you're node can tkae hours or even days to sync.\n            And a user doesn't always want to run their computer 24/7 with an extra 30%+ of resources always being eaten away.\n          </Typography>\n          <br />\n\n          <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n            So at Ethernode we designed the EnKeep, a device that hooks up to your chouse networks router at its current\n            configuration and can run all your blockchain nodes for you localy. Which you can administer and monitor\n            through our simple to use desktop application EnUI.\n\n            And once you're running your own blockchain nodes, this gives you the power and freedom to hook up all your dapps,\n            wallets, and even Metamask. Localy on your own network node without relying on anyones infrastructure or having to\n            trust that their nodes are always on the proper chain and updated to the latest client version.\n        </Typography>\n          <br />\n          <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n            With the EnKeep in your house you can administer all of that in your own house through enUI.\n        </Typography>\n          <br />\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\">\n            EnKeep\n          </Typography>\n          <br />\n          <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n            The EnKeep out of the box will support the following clients and their networks\n          <br /><br />\n            <a href=\"https://github.com/multi-geth/multi-geth\" target=\"_blank\"><b>Multi-Geth</b></a> - Ethereum Classic, Ethereum, Kotti Testnet and many more.\n          <br /><br />\n            <a href=\"https://iohk.zendesk.com/hc/en-us/categories/360002383814-Shelley-Networked-Testnet\" target=\"_blank\"><b>Jormungandr</b></a> - Currently Cardano Nightly Testnets\n          <br /><br />\n            <a href=\"https://althea.net/\" target=\"_blank\">Gaia</a> - Althea test net\n          </Typography>\n        </TabPanel>\n        <Typography>\n          <Link to=\"/store\" className={classes.buttonlink}><Button fullWidth variant=\"outlined\" color=\"primary\">Pre Order(Coming Soon)</Button></Link>\n        </Typography>\n      </Container>\n      {/* Footer */}\n      <Footer />\n      {/* End footer */}\n    </React.Fragment >\n  );\n};\n\nexport default EnkeepPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { useStyles } from \"../../theme/theme\";\nimport { Footer } from \"../../components/footerComp\";\nimport { Navigation } from \"../../components/navComp\";\nimport enUIIcon from \"../../assets/EnUI_Icon_Text.png\";\n\nconst EnuiPage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Navigation />\n      {/* Hero unit */}\n      <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n        <Typography align=\"center\">\n          <img src={enUIIcon} alt=\"ethernode\" height=\"150\" />\n        </Typography>\n        <br />\n        <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n          EnUI is a interface build to interface with the EnKeep and EnApi which runs native in EnOS which is pre-installed\n          one every shipped EnKeep.\n        </Typography>\n        <br />\n        <Typography>\n          <Button fullWidth variant=\"outlined\" color=\"primary\">\n            <a href=\"https://github.com/ethernodeio/enui/\" className={classes.buttonlink}>GitHub</a>\n          </Button>\n        </Typography>\n        <br />\n        <Typography>\n          <Button fullWidth variant=\"outlined\" color=\"primary\">\n            <a href=\"https://github.com/ethernodeio/enui/\" className={classes.buttonlink}>Video</a>\n          </Button>\n        </Typography>\n      </Container>\n      {/* Footer */}\n      <Footer />\n      {/* End footer */}\n\n    </React.Fragment >\n  );\n};\n\nexport default EnuiPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { useStyles } from \"../../theme/theme\";\nimport { Footer } from \"../../components/footerComp\";\nimport { Navigation } from \"../../components/navComp\";\nimport enApiIcon from \"../../assets/EnAPI_Icon_Text.png\";\n\nconst EnapiPage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Navigation />\n      {/* Hero unit */}\n      <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n        <Typography align=\"center\">\n          <img src={enApiIcon} alt=\"ethernode\" height=\"150\" />\n        </Typography>\n        <br />\n        <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n          EnAPI is like the hear of EnOS, it birdges EnUI and EnOS together on the EnKeep to help you smoothly\n          run, operate and monitor your Blockchain nodes on your Ethernode.\n        </Typography>\n        <br />\n        <Typography>\n          <a href=\"https://github.com/ethernodeio/enapi/\" className={classes.buttonlink}> <Button fullWidth variant=\"outlined\" color=\"primary\">GitHub</Button></a>\n        </Typography>\n        <br />\n        <Typography>\n          <a href=\"https://www.youtube.com/watch?v=Vfd4PstITT8\" className={classes.buttonlink}><Button fullWidth variant=\"outlined\" color=\"primary\">Video</Button></a>\n        </Typography>\n      </Container>\n      {/* Footer */}\n      <Footer />\n      {/* End footer */}\n\n    </React.Fragment >\n  );\n};\n\nexport default EnapiPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { useStyles } from \"../../theme/theme\";\nimport { Footer } from \"../../components/footerComp\";\nimport { Navigation } from \"../../components/navComp\";\nimport enosIcon from \"../../assets/EnOS_Icon.png\";\n\nconst EnosPage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Navigation />\n      {/* Hero unit */}\n      <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n        <Typography align=\"center\">\n          <img src={enosIcon} alt=\"ethernode\" height=\"150\" />\n        </Typography>\n        <br />\n        <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n          EnOS is a ubuntu based Linux distribution that comes pre packaged wtih all the tools and software.\n          For EnApi to utilize to run and manage your blockchain nodes through the EnUi interface.\n          <br /><br />\n          The Kernel in EnOS is specifically tailord to run on the ROCKPro64 ARM Architecture.\n          And is pre-compiled with modules for scaling into decentrilized connectivity hardware. Which has\n          support build in for running mesh networks and various other P2P solutions.\n        </Typography>\n        <br />\n        <Typography>\n          <a href=\"https://github.com/ethernodeio/enapi/\" className={classes.buttonlink}><Button fullWidth variant=\"outlined\" color=\"primary\">GitHub</Button></a>\n        </Typography>\n        <br />\n        <Typography>\n          <a href=\"https://www.youtube.com/watch?v=Vfd4PstITT8\" className={classes.buttonlink}><Button fullWidth variant=\"outlined\" color=\"primary\">Video </Button></a>\n        </Typography>\n      </Container>\n      {/* Footer */}\n      <Footer />\n      {/* End footer */}\n\n    </React.Fragment >\n  );\n};\n\nexport default EnosPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport StarIcon from \"@material-ui/icons/StarBorder\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { useStyles } from \"../../theme/theme\";\nimport { Footer } from \"../../components/footerComp\";\nimport { Navigation } from \"../../components/navComp\";\n\nconst tiers = [\n  {\n    title: \"Bakon(BKN) Staking Pool\",\n    subheader: \"Pool ID\",\n    description: [\"325589024a7d1c2415b7949b6e7767c022d22271c5658eb2fe46ab39721a0844\"],\n    buttonText: \"View On Pool Tool\",\n    buttonVariant: \"outlined\",\n    link: \"https://pooltool.io/pools\",\n  },\n  {\n    title: \"Bakon(BKN) Explorer View\",\n    subheader: \"cardano shelly explorer\",\n    description: [\"Checkout our staking pool on the Cardano Shelly incentivised testnet Explorer\"],\n    buttonText: \"View On Explorer\",\n    buttonVariant: \"contained\",\n    link: \"https://shelleyexplorer.cardano.org/en/stake-pool/325589024a7d1c2415b7949b6e7767c022d22271c5658eb2fe46ab39721a0844/\",\n  },\n  {\n    title: \"Bakon(BKN) Pool Fees\",\n    subheader: \"Currently we run our Staking node in docker swarms between the enKeep and a VM in a data center for fail over during testing phases.\",\n    description: [\"Fixed Fee: .010000\", \"Variable Fee: 10.0%\", \"Fee Cap: 0\"],\n    buttonText: \"View On Explorer\",\n    buttonVariant: \"contained\",\n    link: \"https://shelleyexplorer.cardano.org/en/stake-pool/325589024a7d1c2415b7949b6e7767c022d22271c5658eb2fe46ab39721a0844/\",\n  },\n];\n\nconst StakePage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Navigation />\n      {/* Hero unit */}\n      <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          Cardano Bakon Stake Pool (BKN)\n        </Typography>\n        <Typography align=\"left\" color=\"textSecondary\" component=\"p\">\n          Ethernode is also participating in the Cardano Shelly Incentivised test net by running our own staking pool on the EnKeep hardware.\n          For the testing phase we will be running a docker container between the enKeep hardware and a worker node in a data center for a fail over.\n          Even though the enKeep software is stable, the Jormungandr software is still in testing phases. This allows us to give our delegators the highest\n          possible up times achievable during a testing phase.\n          <br />\n          During the beta tests we will build out our software and frontend not to just support running Ethereum based blockchain nodes.\n          But also a full Cardano Staking node with a interface to either, delegate your ADA, run yor own dtaking operation or even a staking pool.\n          <br /><br />\n          Please check out the information below about our staking pool ID and how you can delegate your ADA to the Bakon staking pool.\n          <br /><br />\n          -Team Ethernode\n        </Typography>\n      </Container>\n      {/* End hero unit */}\n      {/* End hero unit */}\n      <Container maxWidth=\"md\" component=\"main\">\n        <Grid container spacing={5}>\n          {tiers.map((tier) => (\n            // Enterprise card is full width at sm breakpoint\n            <Grid item key={tier.title} xs={12} >\n              <Card>\n                <CardHeader\n                  title={tier.title}\n                  subheader={tier.subheader}\n                  titleTypographyProps={{ align: \"center\" }}\n                  subheaderTypographyProps={{ align: \"center\" }}\n                  action={tier.title === \"EnKeep\" ? <StarIcon /> : null}\n                  className={classes.cardHeader}\n                />\n                <CardContent>\n                  <ul>\n                    {tier.description.map((line) => (\n                      <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\n                        {line}\n                      </Typography>\n                    ))}\n                  </ul>\n                </CardContent>\n                <CardActions>\n                  <a href={tier.link} target=\"_blank\" ><Button fullWidth variant=\"outlined\" color=\"primary\">{tier.buttonText}</Button></a>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n      {/* Footer */}\n      <Footer />\n      {/* End footer */}\n    </React.Fragment>\n  );\n};\n\nexport default StakePage;\n","\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { ReusableProvider } from \"reusable\";\n\nimport HomePage from \"./containers/HomePage/HomePage\";\nimport SoftwarePage from \"./containers/SoftwarePage/SoftwarePage\";\nimport AboutUsPage from \"./containers/AboutUsPage/AboutUsPage\";\nimport HardwarePage from \"./containers/HardwarePage/HardwarePage\";\nimport StorePage from \"./containers/StorePage/StorePage\";\nimport EnkeepPage from \"./containers/HardwarePage/EnkeepPage\";\nimport EnuiPage from \"./containers/SoftwarePage/EnuiPage\";\nimport EnapiPage from \"./containers/SoftwarePage/EnapiPage\";\nimport EnosPage from \"./containers/SoftwarePage/EnosPage\";\nimport StakePage from \"./containers/StakePage/StakePage\";\nconst routing = (\n  <ReusableProvider>\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" render={() => (\n          <Redirect to=\"/home\" />\n        )} />\n        <Route path=\"/home\" component={HomePage} />\n        <Route path=\"/software\" component={SoftwarePage} />\n        <Route path=\"/enui\" component={EnuiPage} />\n        <Route path=\"/enapi\" component={EnapiPage} />\n        <Route path=\"/enos\" component={EnosPage} />\n        <Route path=\"/aboutus\" component={AboutUsPage} />\n        <Route path=\"/hardware\" component={HardwarePage} />\n        <Route path=\"/enkeep\" component={EnkeepPage} />\n        <Route path=\"/store\" component={StorePage} />\n        <Route path=\"/stakepage\" component={StakePage} />\n      </Switch>\n    </HashRouter>\n  </ReusableProvider>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n"],"sourceRoot":""}